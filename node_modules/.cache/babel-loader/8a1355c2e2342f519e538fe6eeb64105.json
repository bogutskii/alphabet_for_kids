{"ast":null,"code":"import _slicedToArray from \"/Users/bogutskii/Projects/alphabet_for_kids/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bogutskii/Projects/alphabet_for_kids/src/Alphabet.js\";\n\nimport React, { useState } from \"react\";\nimport \"./alphabet-style.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar Alphabet = function Alphabet(props) {\n  var randomColor = \"#\".concat(Math.floor(Math.random() * 16777215).toString(16)); //const [alphabet, setAlphabet] = useState(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\n\n  var abc = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var next = function next() {\n    if (count === 25) {\n      setCount(0);\n    } else {\n      setCount(count + 1);\n    }\n  };\n\n  var previous = function previous() {\n    if (count === 0) {\n      setCount(25);\n    } else {\n      setCount(count - 1);\n    }\n  };\n\n  var randomLetter = function randomLetter() {\n    var rand = Math.floor(Math.random() * 26);\n    setCount(rand);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"all-alph\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  }, abc.map(function (letter, i) {\n    return i === count ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"selected\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, letter) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"letterCircle\",\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, letter);\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrap\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"wrap-child-active-25\",\n    onClick: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"\\u227A\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: randomColor\n    },\n    className: \"wrap-child-active-50\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, abc[count] + abc[count].toLowerCase()), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"wrap-child-active-25\",\n    onClick: next,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"\\u227B\")), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group\",\n    role: \"group\",\n    \"aria-label\": \"Basic example\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: previous,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: next,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: randomLetter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, \"Random\")));\n};\n\nexport default Alphabet;","map":{"version":3,"sources":["/Users/bogutskii/Projects/alphabet_for_kids/src/Alphabet.js"],"names":["React","useState","Alphabet","props","randomColor","Math","floor","random","toString","abc","count","setCount","next","previous","randomLetter","rand","map","letter","i","color","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./alphabet-style.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst Alphabet = (props) => {\r\n  let randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n  //const [alphabet, setAlphabet] = useState(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\r\n \r\n  const abc = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\"\r\n  ];\r\n\r\n  const [count, setCount] = useState(0);\r\n  const next = () => {\r\n    if (count === 25) {\r\n      setCount(0);\r\n    } else {\r\n      setCount(count + 1);\r\n    }\r\n  };\r\n  const previous = () => {\r\n    if (count === 0) {\r\n      setCount(25);\r\n    } else {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n  const randomLetter = () => {\r\nlet rand = Math.floor(Math.random()*26)\r\nsetCount(rand)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n   \r\n<p className=\"all-alph\">\r\n        {abc.map((letter, i) =>\r\n          i === count ? (\r\n            <span className=\"selected\" key={i}>{letter}</span>\r\n          ) : (\r\n            <span className=\"letterCircle\"key={i}>{letter}</span>\r\n          )\r\n        )}\r\n\r\n</p>\r\n  \r\n      <hr />\r\n\r\n<div className=\"wrap\">\r\n\r\n          <a className=\"wrap-child-active-25\"  onClick={previous}>\r\n          &#8826;\r\n          </a>\r\n\r\n          <div style={{ color: randomColor }} className=\"wrap-child-active-50\">\r\n            {abc[count] + abc[count].toLowerCase()}\r\n          </div>\r\n\r\n          <a className=\"wrap-child-active-25\" onClick={next}>\r\n          &#8827;\r\n          </a>\r\n\r\n</div>\r\n      <hr />\r\n\r\n\r\n\r\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-secondary\"  onClick={previous}>Previous</button>\r\n  <button type=\"button\" className=\"btn btn-secondary\"onClick={next}>Next</button>\r\n  <button type=\"button\" className=\"btn btn-secondary\"  onClick={randomLetter}>Random</button>\r\n</div>\r\n\r\n\r\n</div>\r\n  );\r\n};\r\nexport default Alphabet;\r\n"]},"metadata":{},"sourceType":"module"}