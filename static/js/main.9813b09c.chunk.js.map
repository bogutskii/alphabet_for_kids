{"version":3,"sources":["Comonents/upperLineAlph.js","Comonents/word.js","Alphabet.js","Comonents/NavBar/Navigation.js","Comonents/VideoPlaylist.js","Comonents/aboutPage.js","Comonents/Accordion.js","Comonents/test/testButtons.js","Comonents/test/stats.js","Comonents/ControlCase.js","Comonents/test/test.js","App.js","Comonents/redux/reducers.js","Comonents/redux/store.js","index.js"],"names":["connect","state","letters","current","currentIndex","dispatch","changeLetterOnClicked","index","type","payload","props","react_default","a","createElement","className","map","el","i","concat","includes","key","letter","onClick","show","test","testStart","Fragment","words","transaction","effects","classNames","previousLetter","value","nextLetter","randomColor","Math","floor","random","toString","nextEffect","length","onKeyDown","e","console","log","keyCode","checkKey","Comonents_upperLineAlph","style","color","word","Navigation","react_router_dom","to","VideoPlaylist","width","height","src","frameBorder","allow","allowFullScreen","AboutPage","Accordion","_ref","title","children","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isOpen","setOpen","stats","testCounter","correct","wrong","skip","nextTest","Comonents_Accordion","corList","join","incList","pasList","toggleCase","activeCase","_useState","_useState2","cSelected","setCSelected","_useState3","_useState4","rSelected","setRSelected","onCheckboxBtnClick","selected","indexOf","push","splice","toConsumableArray","ButtonGroup","Button","active","startTest","alphabetForTest","sort","Comonents_ControlCase","testButtons","showStats","test_stats","changeCreateModal","NavBar_Navigation","react_router","exact","path","render","Alphabet","Test","initialState","incorrect","modals","modal","upperLine","showUpperLine","alphabet","arguments","undefined","action","objectSpread2","newIndex","newNextIndex","newCorrectIndex","newIncorrectIndex","newSkipIndex","newNextTestIndex","alpCopy","toUpperCase","toLowerCase","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9813b09c.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./upperLineAlph.css\";\n\nimport {connect} from \"react-redux\";\n\n\nconst UpperLineAlph = (props) => {\n\n    return <div className='center-div'>\n        <div className=\"all-alph\">\n            {props.letters.map((el, i) =>\n                i === props.current ? (\n                    <span className={`selected ${[0, 4, 8, 14, 20, 24].includes(i) ? 'vowels' : ''}`} key={i}>\n                      {el.letter}\n                    </span>\n                ) : (\n                    <span onClick={() => props.changeLetterOnClicked(i)} className=\"letterCircle\" key={i}>\n                      {el.letter}\n                    </span>\n                )\n            )}\n        </div>\n    </div>\n\n}\n\nconst mapStateToProps = (state) => ({\n    letters: state.letters,\n    current: state.current.currentIndex\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    changeLetterOnClicked: (index) => dispatch({\n        type: 'CHANGE_LETTER_ON_CLICKED',\n        payload: {\n            index: index\n        }\n    }),\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpperLineAlph);\n\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nconst Word = (props) => {\n\n    return props.show ? <></> : <div className=\"wrap-child-active-15\" >\n        {props.letters[props.currentIndex].words + ' '+ props.letters[props.currentIndex].transaction}\n    </div>\n\n}\n\nconst mapStateToProps = (state) => ({\n    currentIndex: state.current.currentIndex,\n    letters: state.letters,\n    show: state.test.testStart\n})\n\n\nexport default connect(mapStateToProps, null)(Word);","import React, {useState} from \"react\";\r\nimport \"./alphabet-style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UpperLineAlph from \"./Comonents/upperLineAlph\"\r\n//import Stats from \"./Comonents/test/test\";\r\nimport Word from \"./Comonents/word\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Alphabet = (props) => {\r\n    const {letters, current, effects, previousLetter, nextLetter} = props\r\n\r\n    let randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    let nextEffect = effects[Math.floor(Math.random() * effects.length)]\r\n\r\n\r\n    const checkKey = (e) => {\r\n\r\n        console.log(e, e.keyCode)\r\n        if (e.keyCode === '37') {\r\n            previousLetter(-1)\r\n        } else if (e.keyCode === '39') {\r\n            nextLetter(1)\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div onKeyDown={(e)=>checkKey(e)} >\r\n\r\n\r\n            <UpperLineAlph/>\r\n\r\n\r\n            <div className=\"wrap\">\r\n\r\n                <a className=\"wrap-child-active-25\" onClick={() => previousLetter(-1)}>\r\n                    &#8826;\r\n                </a>\r\n\r\n                <div\r\n                    style={{color: randomColor}}\r\n                    className={`wrap-child-active-50 ${nextEffect}`}\r\n\r\n                >\r\n                    {letters[current].letter}\r\n                    <Word/>\r\n\r\n                </div>\r\n\r\n                <a className=\"wrap-child-active-25\" onClick={() => nextLetter(1)}>\r\n                    &#8827;\r\n                </a>\r\n\r\n            </div>\r\n\r\n\r\n            <h4>{props.current + 1} / 26 </h4>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    letters: state.letters,\r\n    current: state.current.currentIndex,\r\n    effects: state.effects.classNames\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    previousLetter: (value) => dispatch({\r\n        type: 'PREVIOUS_LETTER',\r\n        payload: {\r\n            value: value\r\n        }\r\n    }),\r\n    nextLetter: (value) => dispatch({\r\n        type: 'NEXT_LETTER',\r\n        payload: {\r\n            value: value\r\n        }\r\n    }),\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alphabet);","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\n\nconst Navigation = () => {\n  return <div>\n        <NavLink to='/Alphabet' className=\"btn btn-info\">Alphabet</NavLink>\n        <NavLink to='/Video' className=\"btn btn-info\">Video</NavLink>\n        <NavLink to='/Test' className=\"btn btn-info\">Test</NavLink>\n        <NavLink to='/AboutPage' className=\"btn btn-info\">About</NavLink>\n    </div>\n}\nexport default Navigation;","import React from 'react'\n\n\nconst VideoPlaylist = () => {\n    const playlist = [{\n        name: 'videoName',\n        videoLink: 'https://www.youtube.com/watch?v=75p-N9YKqNo'\n    }]\n    //\n    //     < iframe\n    // width = \"560\"\n    // height = \"315\"\n    // src = \"https://www.youtube.com/embed/75p-N9YKqNo\"\n    // frameBorder = \"0\"\n    // allow = \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n    // allowFullScreen > < /iframe>\n\n\n    return <div>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/75p-N9YKqNo\"\n                 frameBorder=\"0\"\n                 allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                 allowFullScreen/>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ezmsrB59mj8\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/BELlZKpi1Zs\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/FlF5MCykyZg\"\n                frameBorder=\"0\"\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                allowFullScreen></iframe>\n\n    </div>\n\n}\n\nexport default VideoPlaylist","import React from 'react';\n\n\nconst AboutPage = () => {\n  return <div>\n<h1>About</h1>\n\n</div>\n}\n\nexport default AboutPage","import React from \"react\";\nimport \"./accordion.css\";\n\n\nconst Accordion = ({title, children}) => {\n    const [isOpen, setOpen] = React.useState(false);\n    return (\n        <div className=\"accordion-wrapper\">\n            <div\n                className={`accordion-title ${isOpen ? \"open\" : \"\"}`}\n                onClick={() => setOpen(!isOpen)}\n            >\n                {title}\n            </div>\n            <div className={`accordion-item ${!isOpen ? \"collapsed\" : \"\"}`}>\n                <div className=\"accordion-content\">{children}</div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default Accordion;\n","import React from \"react\";\nimport \"../../styles.css\";\nimport {connect} from \"react-redux\";\n\n\nconst TestButtons = (props) => {\n\n    const {nextTest, correct, wrong, skip, testCounter} = props\n\n\n    return (\n\n        <div onClick={() => nextTest()}>\n            <button className=\"btn btn-secondary\" onClick={() => correct(testCounter)}>\n                Correct\n            </button>\n\n            <button className=\"btn btn-secondary\" onClick={() => wrong(testCounter)}>\n                Wrong\n            </button>\n\n            <button className=\"btn btn-secondary\" onClick={() => skip(testCounter)}>\n                Skip\n            </button>\n\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    currentIndex: state.current.currentIndex,\n    stats: state.stats,\n    testCounter: state.test.testCounter\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    correct: (value) => dispatch({\n        type: 'CORRECT_LETTER',\n        payload: {\n            value: value\n        }\n    }),\n    wrong: (value) => dispatch({\n        type: 'WRONG_LETTER',\n        payload: {\n            value: value\n        }\n    }),\n    skip: (value) => dispatch({\n        type: 'SKIP_LETTER',\n        payload: {\n            value: value\n        }\n    }),\n    nextTest: (value) => dispatch({\n        type: 'NEXT_TEST_COUNTER',\n        payload: {\n            value: value\n        }\n    }),\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestButtons);\n","import Accordion from \"../Accordion\";\nimport {connect} from \"react-redux\";\nimport React from 'react'\n\nconst Stats = (props) => {\n    const {stats} = props;\n\n    return (\n\n        <div>\n\n\n            <h1 className=\"gradient-text-animation\">Your score!</h1>\n\n            <Accordion title={\"Correct: \" + stats.corList.length}\n                       children={stats.corList.join(', ')}/>\n            <Accordion title={\"Wrong: \" + stats.incList.length}\n                       children={stats.incList.join(', ')}/>\n            <Accordion title={\"Skipped: \" + stats.pasList.length}\n                       children={stats.pasList.join(', ')}/>\n\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state) => ({\n    stats: state.stats\n\n\n})\n\n\nexport default connect(mapStateToProps, null)(Stats);","import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport {Button, ButtonGroup} from 'reactstrap'\n\nconst ControlCase = (props) => {\n    const {toggleCase} = props\n    const [cSelected, setCSelected] = useState([\"upper\"]);\n    const [rSelected, setRSelected] = useState(\"upper\");\n\n\n    const onCheckboxBtnClick = (selected) => {\n        setCSelected([])\n        setRSelected(null)\n\n        const index = cSelected.indexOf(selected);\n        if (index < 0) {\n            cSelected.push(selected);\n        } else {\n            cSelected.splice(index, 1);\n        }\n        setCSelected([...cSelected]);\n        toggleCase(selected)\n    }\n    return <div>\n        <h5>Case Options</h5>\n        <ButtonGroup>\n            <Button color=\"warning\" onClick={() => onCheckboxBtnClick(\"upper\")}\n                    active={rSelected === 'upper'}>A</Button>\n            <Button color=\"warning\" onClick={() => onCheckboxBtnClick('lower')}\n                    active={rSelected === 'lower'}>a</Button>\n            <Button color=\"warning\" onClick={() => onCheckboxBtnClick('both')} active={rSelected === 'both'}>Aa</Button>\n        </ButtonGroup>\n        <p>{rSelected}</p>\n\n    </div>\n\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    toggleCase: (activeCase) => dispatch({\n        type: 'TOGGLE_CASE',\n        payload: {\n            activeCase: activeCase,\n        }\n    }),\n\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlCase);","import React from \"react\";\nimport Accordion from \"../Accordion\"\nimport {connect} from \"react-redux\";\nimport TestButtons from \"./testButtons\";\nimport '../../alphabet-style.css'\nimport Stats from \"./stats\";\nimport ControlCase from \"../ControlCase\";\n\n\nconst Test = (props) => {\n    const {stats, test, nextTest, startTest} = props;\n\n    let randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n\n\n    return (\n        <div>\n\n            <button onClick={() => startTest([...test.alphabetForTest].sort(() => Math.random() - 0.5))}>\n                Start test\n            </button>\n            {test.testStart &&\n            <div\n                style={{color: randomColor}}\n                className=\"wrap-child-active-50\"\n            >\n                <ul>\n                    {test.alphabetForTest.map((letter, i) => i === test.testCounter ? <li>{letter}</li> : <></>)}\n                </ul>\n\n            </div>\n            }\n            <ControlCase/>\n            {test.testStart && <TestButtons/>}\n            {test.testStart && <h3>Left: {26 - test.testCounter}</h3>}\n\n            {stats.showStats && <Stats/>}\n\n        </div>\n    )\n};\n\n\nconst mapStateToProps = (state) => ({\n    stats: state.stats,\n    test: state.test\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    nextTest: (value) => dispatch({\n        type: 'NEXT_TEXT_COUNTER',\n        payload: {\n            value: value\n        }\n    }),\n    startTest: (value) => dispatch({\n        type: 'START_TEST',\n        payload: {\n            value: value\n        }\n    }),\n\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);\n","import React from \"react\";\nimport \"./styles.css\";\nimport Alphabet from \"./Alphabet\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Navigation from './Comonents/NavBar/Navigation';\nimport VideoPlaylist from './Comonents/VideoPlaylist'\nimport AboutPage from './Comonents/aboutPage'\nimport Test from \"./Comonents/test/test\";\nimport {connect} from 'react-redux'\n\n\n\nfunction App(props) {\nconst {state} = props\n    return (\n        <Router>\n            <div className=\"App\">\n                <Navigation/>\n                <Route exact path=\"/Alphabet\" render ={Alphabet}/>\n                <Route path='/Video' render={VideoPlaylist}/>\n                <Route path='/Test' render={Test}/>\n                <Route path='/AboutPage' render={AboutPage}/>\n\n                {/*<Stats/>*/}\n            </div>\n        </Router>\n    );\n}\n\n\nconst mapStateToProps = (state) => ({\n    state: state\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\n    changeCreateModal: (value) => dispatch({\n        type: 'CHANGE_CREATE_MODAL',\n        payload: {\n            value: value\n        }\n    }),\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","\n\nconst initialState = {\n    letters: [\n        {letter: \"A\", words: \"Apple\", transaction: \"[ei]\"},\n        {letter: \"B\", words: \"Ball\", transaction: \"[bi:]\"},\n        {letter: \"C\", words: \"Cat\", transaction: \"[ci:]\"},\n        {letter: \"D\", words: \"Dog\", transaction: \"[di:]\"},\n        {letter: \"E\", words: \"Eat\", transaction: \"[i:]\"},\n        {letter: \"F\", words: \"Fox\", transaction: \"[ef]\"},\n        {letter: \"G\", words: \"Grass\", transaction: \"[ʤi:]\"},\n        {letter: \"H\", words: \"Hat\", transaction: \"[eiʧ]\"},\n        {letter: \"I\", words: \"Ice\", transaction: \"[ai]\"},\n        {letter: \"J\", words: \"Jam\", transaction: \"[ʤei]\"},\n        {letter: \"K\", words: \"Kid\", transaction: \"[kei]\"},\n        {letter: \"L\", words: \"Life\", transaction: \"[el]\"},\n        {letter: \"M\", words: \"Mouse\", transaction: \"[em]\"},\n        {letter: \"N\", words: \"Nose\", transaction: \"[en]\"},\n        {letter: \"O\", words: \"Oak\", transaction: \"[ou]\"},\n        {letter: \"P\", words: \"Pet\", transaction: \"[pi:]\"},\n        {letter: \"Q\", words: \"Queen\", transaction: \"[kju:]\"},\n        {letter: \"R\", words: \"Red\", transaction: \"[a:]\"},\n        {letter: \"S\", words: \"Sport\", transaction: \"[es]\"},\n        {letter: \"T\", words: \"Tab\", transaction: \"[ti:]\"},\n        {letter: \"U\", words: \"Up\", transaction: \"[ju:]\"},\n        {letter: \"V\", words: \"Van\", transaction: \"[vi:]\"},\n        {letter: \"W\", words: \"Water\", transaction: \"[‘dablju:]\"},\n        {letter: \"X\", words: \"Xenia\", transaction: \"[eks]\"},\n        {letter: \"Y\", words: \"Yes\", transaction: \"[wai]\"},\n        {letter: \"Z\", words: \"Zebra\", transaction: \"[zed]\"}\n    ],\n    stats: {\n        showStats: false,\n        correct: 0,\n        incorrect: 0,\n        skip: 0,\n        corList: [],\n        incList: [],\n        pasList: []\n    },\n    test: {\n        alphabetForTest: [\n            \"A\",\n            \"B\",\n            \"C\",\n            \"D\",\n            \"E\",\n            \"F\",\n            \"G\",\n            \"H\",\n            \"I\",\n            \"J\",\n            \"K\",\n            \"L\",\n            \"M\",\n            \"N\",\n            \"O\",\n            \"P\",\n            \"Q\",\n            \"R\",\n            \"S\",\n            \"T\",\n            \"U\",\n            \"V\",\n            \"W\",\n            \"X\",\n            \"Y\",\n            \"Z\"\n        ],\n        testStart: false,\n        testCounter: 0\n    },\n    modals: {\n        modal: false\n    },\n    current: {\n        currentIndex: 0\n    },\n    upperLine: {\n        showUpperLine: true\n    },\n    effects: {\n        classNames: [\"flipOutY\", \"flipOutX\",\"bounceIn\",\"bounceOut\",\"wobble\", \"tada\",\"swing\", \"rubberBand\", \"rotateIn\",\"rotateInDownLeft\",\"flip\",\"zoomInUp\",\"slideInUp\"]\n    }\n\n}\n//flipOutY, flipOutX,bounceIn,bounceOut [\"bounce\", \"flash\", \"pulse\", \"rubberBand\", \"shake\", \"swing\", \"tada\", \"wobble\", \"bounceIn\", \"bounceInDown\", \"bounceInLeft\", \"bounceInRight\", \"bounceInUp\", \"bounceOut\", \"bounceOutDown\", \"bounceOutLeft\", \"bounceOutRight\", \"bounceOutUp\", \"fadeIn\", \"fadeInDown\", \"fadeInDownBig\", \"fadeInLeft\", \"fadeInLeftBig\", \"fadeInRight\", \"fadeInRightBig\", \"fadeInUp\", \"fadeInUpBig\", \"fadeOut\", \"fadeOutDown\", \"fadeOutDownBig\", \"fadeOutLeft\", \"fadeOutLeftBig\", \"fadeOutRight\", \"fadeOutRightBig\", \"fadeOutUp\", \"fadeOutUpBig\", \"animated\", \"flipInX\", \"flipInY\", \"flipOutX\", \"flipOutY\", \"lightSpeedIn\", \"lightSpeedOut\", \"rotateIn\", \"rotateInDownLeft\", \"rotateInDownRight\", \"rotateInUpLeft\", \"rotateInUpRight\", \"rotateOut\", \"rotateOutDownLeft\", \"rotateOutDownRight\", \"rotateOutUpLeft\", \"rotateOutUpRight\", \"hinge\", \"rollIn\", \"rollOut\", \"zoomIn\", \"zoomInDown\", \"zoomInLeft\", \"zoomInRight\", \"zoomInUp\", \"zoomOut\", \"zoomOutDown\", \"zoomOutLeft\", \"zoomOutRight\", \"zoomOutUp\", \"slideInDown\", \"slideInLeft\", \"slideInRight\", \"slideInUp\", \"slideOutDown\", \"slideOutLeft\", \"slideOutRight\", \"slideOutUp\"]\nconst alphabet = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_LETTER_ON_CLICKED':\n            return {\n                ...state, current: {...state.current, currentIndex: action.payload.index}\n            }\n        case 'PREVIOUS_LETTER':\n            let newIndex = state.current.currentIndex\n            if (newIndex === 0) {\n                newIndex = 25;\n            } else {\n                --newIndex\n            }\n            return {\n                ...state, current: {...state.current, currentIndex: newIndex}\n            }\n        case 'NEXT_LETTER':\n            let newNextIndex = state.current.currentIndex\n            if (newNextIndex === 25) {\n                newNextIndex = 0;\n            } else {\n                newNextIndex++\n            }\n            return {\n                ...state, current: {...state.current, currentIndex: newNextIndex}\n            }\n        case 'CORRECT_LETTER':\n            let newCorrectIndex = state.current.currentIndex\n            if (newCorrectIndex === 25) {\n                newCorrectIndex = 0;\n            } else {\n                newCorrectIndex++\n            }\n            return {\n                ...state, current: {...state.current, currentIndex: newCorrectIndex},\n                stats: {\n                    ...state.stats,\n                    corList: [...state.stats.corList, state.test.alphabetForTest[action.payload.value]]\n                }\n\n            }\n        case 'WRONG_LETTER':\n            let newIncorrectIndex = state.current.currentIndex\n            if (newIncorrectIndex === 25) {\n                newIncorrectIndex = 0;\n            } else {\n                newIncorrectIndex++\n            }\n            return {\n                ...state, current: {...state.current, currentIndex: newIncorrectIndex},\n                stats: {...state.stats, incList: [...state.stats.incList, state.letters[action.payload.value].letter]}\n\n            }\n        case 'SKIP_LETTER':\n            let newSkipIndex = state.current.currentIndex\n            if (newSkipIndex === 25) {\n                newSkipIndex = 0;\n            } else {\n                newSkipIndex++\n            }\n            return {\n                ...state, current: {...state.current, currentIndex: newSkipIndex},\n                stats: {...state.stats, pasList: [...state.stats.pasList, state.letters[action.payload.value].letter]}\n\n            }\n        case 'NEXT_TEST_COUNTER':\n            let newNextTestIndex = state.test.testCounter\n\n            if (newNextTestIndex >= 25) {\n\n                return {\n                    ...state, test: {...state.test, testCounter: 0, testStart: false},\n                    stats: {...state.stats, showStats: true}\n                }\n            } else {\n                newNextTestIndex++\n            }\n            return {\n                ...state, test: {...state.test, testCounter: newNextTestIndex}\n\n            }\n        case 'START_TEST':\n            return {\n                ...state, test: {...state.test, testCounter: 0, testStart: true, alphabetForTest: action.payload.value},\n                stats: {\n                    showStats: false,\n                    correct: 0,\n                    incorrect: 0,\n                    skip: 0,\n                    corList: [],\n                    incList: [],\n                    pasList: []\n                }\n            }\n        case 'TOGGLE_CASE':\n            let alpCopy = [...state.test.alphabetForTest];\n            if (action.payload.activeCase === 'upper') {\n                alpCopy = alpCopy.map(el => el[0].toUpperCase())\n            } else if (action.payload.activeCase === 'lower') {\n                alpCopy = alpCopy.map(el => el[0].toLowerCase())\n            } else if (action.payload.activeCase === 'both') {\n                alpCopy = alpCopy.map(el => el[0].toUpperCase() + el[0].toLowerCase())\n            } else {\n                return state\n            }\n            return {\n                ...state, test: {...state.test, alphabetForTest: alpCopy},\n\n            }\n\n\n        default:\n            return state\n    }\n}\nexport default alphabet;","import {applyMiddleware, createStore} from \"redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport alphabet from './reducers'\n\nconst store = createStore(\n    alphabet, composeWithDevTools(applyMiddleware())\n)\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider} from \"react-redux\";\nimport store from \"./Comonents/redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}