{"version":3,"sources":["Comonents/UpperLineAlph.js","Comonents/Accordion.js","Comonents/Stats.js","Alphabet.js","App.js","index.js"],"names":["UpperLineAlph","props","react_default","a","createElement","className","abc","map","letter","i","count","key","Accordion","_ref","title","children","_React$useState","React","useState","_React$useState2","Object","slicedToArray","isOpen","setOpen","concat","onClick","Stats","Comonents_Accordion","results","correct","corList","join","incorrect","incList","pasS","pasList","Alphabet","randomColor","Math","floor","random","toString","alp","_useState","el","toLowerCase","_useState2","setAbc","_useState3","_useState4","setCount","_useState5","_useState6","hide","setHide","_useState7","_useState8","counter","setCounter","_useState9","_useState10","formCheck","setFormCheck","_useState11","_useState12","setResults","next","previous","goBack","sort","skipWrongCorrect","Fragment","style","color","toConsumableArray","objectSpread2","role","type","rand","toUpperCase","App","src_Alphabet","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4d366b71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./upperLineAlph.css\";\n\n\n\nexport default function UpperLineAlph (props){\nreturn <div className='center-div'>\n        <div className=\"all-alph\">\n            {props.abc.map((letter, i) =>\n                i === props.count ? (\n                    <span className=\"selected\" key={i}>\n                      {letter}\n                    </span>\n                ) : (\n                    <span className=\"letterCircle\" key={i}>\n                      {letter}\n                    </span>\n                )\n            )}\n        </div>\n    </div>\n\n}\n\n\n","import React from \"react\";\nimport \"./accordion.css\";\n\nconst Accordion = ({ title, children }) => {\n    const [isOpen, setOpen] = React.useState(false);\n    return (\n        <div className=\"accordion-wrapper\">\n            <div\n                className={`accordion-title ${isOpen ? \"open\" : \"\"}`}\n                onClick={() => setOpen(!isOpen)}\n            >\n                {title}\n            </div>\n            <div className={`accordion-item ${!isOpen ? \"collapsed\" : \"\"}`}>\n                <div className=\"accordion-content\">{children}</div>\n            </div>\n        </div>\n    );\n};\nexport default Accordion;\n","import React from \"react\";\nimport \"../styles.css\";\nimport Accordion from \"./Accordion\"\n\n\nexport default function Stats (props){\n        return (\n            <div>\n                <h1>Your score!</h1>\n                <Accordion title={\"Correct: \"+ props.results.correct}\n                           children={props.results.corList.join(', ')}/>\n                <Accordion title={\"Wrong: \" + props.results.incorrect}\n                           children={props.results.incList.join(', ')}/>\n                <Accordion title={\"Skipped: \" + props.results.pasS}\n                           children={props.results.pasList.join(', ')}/>\n\n            </div>\n        );\n    };\n\n","import React, { useState } from \"react\";\r\nimport \"./alphabet-style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport UpperLineAlph from \"../src/Comonents/UpperLineAlph\"\r\nimport Stats from \"./Comonents/Stats\";\r\n\r\nconst Alphabet = (props) => {\r\n  let randomColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n\r\n  const alp = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\"\r\n  ];\r\n  const [abc, setAbc] = useState(alp.map((el) => el + el.toLowerCase()));\r\n  const [count, setCount] = useState(0);\r\n  const [hide, setHide] = useState(false);\r\n  const [counter, setCounter] = useState(0);\r\n  const [formCheck, setFormCheck] = useState(false);\r\n  const [results, setResults] = useState({\r\n    correct: 0,\r\n    incorrect: 0,\r\n    pasS: 0,\r\n    incList: [],\r\n    corList: [],\r\n    pasList: []\r\n  });\r\n  const next = () => {\r\n    if (count === 25) {\r\n      setCount(0);\r\n    } else {\r\n      setCount(count + 1);\r\n    }\r\n  };\r\n  const previous = () => {\r\n    if (count === 0) {\r\n      setCount(25);\r\n    } else {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n  const randomLetter = () => {\r\n    let rand = Math.floor(Math.random() * 26);\r\n    setCount(rand);\r\n  };\r\n  const startTest = () => {\r\n    setCount(0);\r\n    setHide(!hide);\r\n    setAbc([...abc].sort(() => 0.5 - Math.random()));\r\n  };\r\n\r\n  const correct = () => {\r\n    skipWrongCorrect();\r\n    setResults({\r\n      ...results,\r\n      correct: results.correct + 1,\r\n      corList: [...results.corList, abc[count]]\r\n    });\r\n  };\r\n  const wrong = () => {\r\n    skipWrongCorrect();\r\n    setResults({...results,\r\n      incorrect: results.incorrect + 1,\r\n      incList: [...results.incList, abc[count]]\r\n    });\r\n  };\r\n  const skip = () => {\r\n    skipWrongCorrect();\r\n    setResults({...results,\r\n      pasS: results.pasS + 1,\r\n      pasList: [...results.pasList, abc[count]]\r\n    });\r\n  };\r\n\r\n  const goBack = () => {\r\n    setCount(0);\r\n    setCounter(0);\r\n    setFormCheck(!formCheck);\r\n    setHide(!hide);\r\n    setResults({\r\n      correct: 0,\r\n      incorrect: 0,\r\n      pasS: 0,\r\n      corList: [],\r\n      incList: [],\r\n      pasList: []\r\n    });\r\n    setAbc(abc.sort());\r\n  };\r\n\r\n  const stopTest = () => {\r\n    setCount(0);\r\n    setFormCheck(!formCheck);\r\n    setAbc(abc.sort());\r\n  };\r\n  const skipWrongCorrect = () => {\r\n    if (count === 25) {\r\n      setCount(0);\r\n      setFormCheck(!formCheck);\r\n    }\r\n    setCount(count + 1);\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const upperAndLowerCases = () => {\r\n    setAbc(alp.map((el) => el + el.toLowerCase()));\r\n  };\r\n\r\n  const upperCase = () => {\r\n    setAbc(abc.map((el) => el[0].toUpperCase()));\r\n  };\r\n\r\n  const lowerCase = () => {\r\n    setAbc(abc.map((el) => el[0].toLowerCase()));\r\n  };\r\n\r\n  return (\r\n      <>\r\n\r\n        {!formCheck ? (\r\n            <div>\r\n\r\n              {hide ? (\r\n                  \"\"\r\n              ) : (\r\n                  <UpperLineAlph abc={abc} count={count}/>\r\n              )}\r\n\r\n              <div className=\"wrap\">\r\n                <a className=\"wrap-child-active-25\" onClick={previous}>\r\n                  &#8826;\r\n                </a>\r\n\r\n                <div\r\n                    style={{ color: randomColor }}\r\n                    className=\"wrap-child-active-50\"\r\n                >\r\n                  {abc[count]}\r\n                </div>\r\n\r\n                <a className=\"wrap-child-active-25\" onClick={next}>\r\n                  &#8827;\r\n                </a>\r\n\r\n              </div>\r\n\r\n\r\n              {hide ? (\r\n                  <button className=\"btn btn-secondary\" onClick={stopTest}>\r\n                    Stop Test\r\n                  </button>\r\n              ) : (\r\n                  <button onClick={startTest} className=\"btn btn-secondary\">\r\n                    Start Test\r\n                  </button>\r\n              )}\r\n              <p />\r\n\r\n              <br />\r\n              {hide ? (\r\n                  <div>\r\n                    <button className=\"btn btn-secondary\" onClick={correct}>\r\n                      Correct\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-secondary\" onClick={wrong}>\r\n                      Wrong\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-secondary\" onClick={skip}>\r\n                      Skip\r\n                    </button>\r\n                    <p />\r\n                    {<h4>{counter + \"/\" + 26}</h4>}\r\n                  </div>\r\n              ) : (\r\n                  \"\"\r\n              )}\r\n              <p />\r\n              {hide ? (\r\n                  \"\"\r\n              ) : (\r\n                  <div className=\"btn-group\" role=\"group\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={previous}\r\n                    >\r\n                      Previous\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={next}\r\n                    >\r\n                      Next\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={randomLetter}\r\n                    >\r\n                      Random\r\n                    </button>\r\n                  </div>\r\n              )}\r\n              {hide ? (\r\n                  \"\"\r\n              ) : (\r\n                  <div className=\"lower-upper-both\">\r\n                    <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={() => upperAndLowerCases()}\r\n                    >\r\n                      Both\r\n                    </button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => upperCase()}>\r\n                      Upper\r\n                    </button>\r\n                    <button className=\"btn btn-secondary\" onClick={() => lowerCase()}>\r\n                      Lower\r\n                    </button>\r\n                  </div>\r\n              )}\r\n            </div>\r\n        ) : (\r\n\r\n            <div>\r\n              <Stats results={results} goBack={goBack} hide={hide}/>\r\n\r\n              <br />\r\n\r\n              {hide ? (\r\n                  <button onClick={goBack} className=\"btn btn-secondary\">\r\n                    Go back\r\n                  </button>\r\n              ) : (\r\n                  \"\"\r\n              )}\r\n            </div>\r\n        )}\r\n      </>\r\n  );\r\n};\r\nexport default Alphabet;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport Alphabet from \"./Alphabet.js\";\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Alphabet />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}